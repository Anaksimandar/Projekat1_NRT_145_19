<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <title>Document</title>
    
</head>
<body>
    
    <div class="container">
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <ul class="navbar-nav">
                <li class="nav-item"><a class="nav-link active" href="/">Pocetna</a></li>
            </ul>
        </nav>
        <h1>Izmena oglasa</h1>
        
        <div class="row">
            <div class="col-4">
                <form action="/oglas/edit" method="post">
                    <input type="text" name="id" value="<%=data.id%>" hidden>
                    <div>
                        <label class="form-label" for="kategorija">Kategorija</label>
                        <select class="form-select mb-2" name="kategorija" id="kategorija">
                            <option value="muzicki instrument">muzicki instrument</option>
                            <option value="odeca">odeca</option>
                            <option value="kurs">kurs</option>
                            <option value="bela tehnika">bela tehnika</option>
                            <option value="nakit">nakit</option>
                        </select>
                    </div>
                    <div>
                        <label class="form-label" for="vrednost">Cena</label>
                        <input type="number" id="vrednost" value="<%=data.cena.vrednost%>" name="vrednost" class="form-control">
                    </div>
                    <div>
                        <label class="form-label" for="valuta">Valuta</label>
                        <select class="form-select mb-2" name="valuta" id="valuta">
                            <option selected value="dinar">dinar</option>
                            <option value="euro">euro</option>
                            <option value="rublja">rublja</option>
                            <option value="dolar">dolar</option>
                        </select>
                    </div>
                    <div>
                        <label for="text">Opis predmeta</label>
                        <textarea class="form-control" name="text" id="text"><%=data.opis%></textarea>
                    </div>
                    <div>
                        <label class="form-label" for="datum">Datum isteka</label>
                        <input id="datum" name="datum" type="date" value="<%=data.datum%>" class="form-control">
                    </div>
                    <div>
                        <label class="form-label">Tagovi</label>
                        <div class="d-flex">
                            <div>
                                <input class="form-control" id="tagInput" type="text"></input>
                            </div>
                            <div>
                                <button type="button" onclick="dodajTag()" id="dodajTagBtn" class="btn btn-info">Dodaj</button>
                            </div>
                        </div>
                        <span id="prikazTagova">
                            
                            <% for(let i=0; i < data.tagovi.length; i++) { %>
                                <div class="tag mb-2 d-flex tag">
                                    <input class="form-control w-25" value="<%= data.tagovi[i] %>" type="text" readonly />
                                    <button id="editTagBtn" type="button" onclick="editTag(this)" class="btn btn-sm btn-warning me-1">Edit</button>
                                    <button id="deleteTagBtn" type="button" onclick="removeTag(this)" class="btn btn-sm btn-danger">Remove</button>
                                </div>
                            <%} %>
                                
                            
                        </span>
                            <div class="d-flex">
                                <select class="form-select" id="tipMejla">
                                    <option value="privatni">privatni</option>
                                    <option value="poslovni">poslovni</option>
                                </select>
                        
                                <input class="form-control" id="inputMejl" type="email"></input>
                                <button type="button" id="dodajMejlBtn" class="btn btn-info">Dodaj</button>
                            </div>
                        <label class="form-label">Mejlovi</label>
                        <span id="listaMejlova">
                                <% for(let i=0; i < data.mails.length; i++) { %>
                                    <div class="d-flex mb-2">
                                        <input id="mailTextInput" readonly type="input"  class="form-control"
                                            value="<%=data.mails[i].mail%>" />
                                        <input id="mailTypeInput" readonly type="input"  class="form-control mx-2"
                                            value="<%=data.mails[i].tip%>" />
                                        <button onclick="editMail(this)" type="button" class="btn-sm btn btn-warning  me-1">Edit</button>
                                        <button onclick="removeMail(this)" type="button" class="btn-sm btn btn-danger ">Remove</button>
                                    </div>
                                <%}%>
                        </span>

                        
                    <button id="sacuvajOglasBtn"  type="submit" class="btn btn-success mb-1">Sacuvaj</button>
                    <a href="/" class="btn btn-danger">Ponisti</a>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Tag Modal -->
    <div class="modal fade" id="editTagModal" tabindex="-1" aria-labelledby="editTagModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editTagModalLabel">Edit Tag</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="text" id="editInputModal" class="form-control">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveTagModalBtn">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Mail Modal -->
    <div class="modal fade" id="mailModal" tabindex="-1" aria-labelledby="mailModal" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="mailModal">Edit mail</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="text" id="mailInputModal" class="form-control">
                    <select class="form-control" id="mailTypeInputModal">
                        <option value="privatni">privatni</option>
                        <option value="poslovni">poslovni</option>
                    </select>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveMailModal">Save changes</button>
                </div>
            </div>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
    
    <script>
        // tags
        const dodajMailBtn = document.getElementById('dodajMailBtn');
        const tagInput = document.getElementById('tagInput');
        const showTags = document.getElementById('prikazTagova');
        const editTagModal = new bootstrap.Modal(document.getElementById('editTagModal'));
        const existingTags = document.querySelectorAll(".tag");
        const editTagInputModal = document.querySelector("#editInputModal");
        const tagModalSaveBtn = document.querySelector("#saveTagModalBtn");
        let currentTagElement;

        // rad sa mejlovima
        const dodajMejlBtn = document.getElementById("dodajMejlBtn");
        const mejlInput = document.getElementById("inputMejl");
        const mejlTipInput = document.getElementById("tipMejla");
        const listaMejlova = document.getElementById("listaMejlova");
        let primaryInputTag;
        // let currentInputTag;
        // //let editInputModal;
        // mail modal
        const mailModal = new bootstrap.Modal(document.getElementById('mailModal'));
        const mailInputFieldModal = document.getElementById('mailInputModal');
        const mailTypeSelectFieldModal = document.getElementById('mailTypeInputModal');
        const mailModalSaveBtn = document.getElementById('saveMailModal');
        let primaryInputMail;
        let primarySelectMailType;

        
        function openMailModal() {
            mailInputFieldModal.value = primaryInputMail.value;
            mailTypeSelectFieldModal.value = primarySelectMailType.value;
            mailModal.show();
        }

        mailModalSaveBtn.addEventListener('click', function () {
            let newMail = mailInputFieldModal.value;
            let newType = mailTypeSelectFieldModal.value;
            if (newMail && newType) {
                primaryInputMail.value = newMail;
                primarySelectMailType.value = newType;
                mailModal.hide();
            }
        })

        dodajMejlBtn.addEventListener('click', function () {
            dodajMejl();
        })

        function editMail(editMailBtn){
            primaryInputMail = editMailBtn.parentNode.querySelector('#mailTextInput');
            primarySelectMailType = editMailBtn.parentNode.querySelector('#mailTypeInput');
            openMailModal();
        }

        function removeMail(btn){
            const parent = btn.parentNode;
            parent.parentNode.removeChild(parent);
        }

        function dodajMejl() {
            const mailText = mejlInput.value;
            const mailTip = mejlTipInput.value;
            if (mailText.length == 0 || mailTip.length == 0) {
                alert("Proverite unete podatke");
                return;
            }

            const mailElement = document.createElement('div');
            mailElement.classList.add('mail', 'mb-2', 'd-flex');
            const mailInputElement = document.createElement('input');
            mailInputElement.classList.add('form-control');
            mailInputElement.type = 'text';
            mailInputElement.name = 'mail';
            mailInputElement.value = mailText;
            mailInputElement.readOnly = true;

            const mailTypeElement = document.createElement('input');
            mailTypeElement.classList.add('form-control', 'mx-2');
            mailTypeElement.type = 'text';
            mailTypeElement.name = 'mailType';
            mailTypeElement.value = mailTip;
            mailTypeElement.readOnly = true;

            const removeBtn = document.createElement('button');
            removeBtn.textContent = 'Remove';
            removeBtn.type = 'button';
            removeBtn.classList.add('btn', 'btn-sm', 'btn-danger');
            removeBtn.addEventListener('click', function () {
                listaMejlova.removeChild(mailElement);
            });

            const editBtn = document.createElement('button');
            editBtn.textContent = 'Edit';
            editBtn.type = 'button';
            editBtn.classList.add('btn', 'btn-sm', 'btn-warning', 'me-1');
            editBtn.addEventListener('click', function () {
                openMailModal();
            });

            mailElement.appendChild(mailInputElement);
            mailElement.appendChild(mailTypeElement);
            mailElement.appendChild(editBtn);
            mailElement.appendChild(removeBtn);
            // mailElement.appendChild(removeBtn);
            listaMejlova.appendChild(mailElement);
            mejlInput.value = '';
        }



        function removeTag(button) {
            var parentDiv = button.parentNode; // button container
            parentDiv.parentNode.removeChild(parentDiv); // removing child of parent div (container)
        }

        function editTag(editButton) {
            var modifiedTag = editButton.parentNode.getElementsByTagName('input')[0];
            currentTagElement = modifiedTag;
            openModal();
        }

        function openModal() {
            editTagInputModal.value = currentTagElement.value.trim();
            editTagModal.show();
        }

        tagModalSaveBtn.addEventListener('click',()=>{
            if (currentTagElement) {
                const newTagText = editTagInputModal.value.trim();
                if (newTagText) {
                    currentTagElement.value = newTagText;
                    editTagModal.hide();
                }
            }
        })

        function dodajTag() {
            const tagElement = document.createElement('div');
            tagElement.classList.add('tag', 'mb-2', 'd-block');
            console.log(tagElement);
            const tagText = tagInput.value.trim();
            if (tagText) {
                
                const tagInputElement = document.createElement('input');
                
                tagInputElement.classList.add('form-control', 'w-25');
                tagInputElement.type = 'text';
                tagInputElement.name = 'tagovi';
                tagInputElement.readOnly = true;
                tagInputElement.value = tagText;

                const editBtn = document.createElement('button');
                editBtn.textContent = 'Edit';
                editBtn.type = 'button';
                editBtn.classList.add('btn', 'btn-sm', 'btn-warning', 'me-1');

                const removeBtn = document.createElement('button');
                removeBtn.textContent = 'Remove';
                removeBtn.type = 'button';
                removeBtn.classList.add('btn', 'btn-sm', 'btn-danger');

                tagElement.appendChild(tagInputElement);
                tagElement.appendChild(editBtn);
                tagElement.appendChild(removeBtn);
                showTags.appendChild(tagElement);
                tagInput.value = '';

                editBtn.addEventListener('click', function(){
                    editTag(editBtn);
                });
                removeBtn.addEventListener('click', function(){
                    removeTag(removeBtn);
                });


            }
            else{
                alert("Input tag cannot be empty")
            }
        };

        // function saveMailBtn(){
        //     if (currentTagElement) {
        //         const newTagText = editMailTextInputModal.value.trim();
        //         if (newTagText) {
        //             currentTagElement.textContent = newTagText;
        //             editTagModal.hide();
        //         }
        //     }
        // }
        

        function saveOglas () {
            const form = document.querySelector('form[action="/oglas/edit"]');
            let tagElements = document.querySelectorAll("span.badge.bg-secondary.me-2");
            let listOfTags = Array.from(tagElements).map(te => te.textContent);
            // Remove any existing hidden inputs for tags to avoid duplicates
            document.querySelectorAll('input[name="tagovi"]').forEach(input => input.remove());
            // Create and append hidden inputs for each tag
            listOfTags.forEach(tag => {
                const hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'tagovi';
                hiddenInput.value = tag;
                form.appendChild(hiddenInput);
            });
        };
        
    </script>
</body>
</html>